@model AlphaWebApp.Models.Subscription

@{
    if (Model != null)
    {
        <h1><strong>You have Already an Active Subscritpion</strong></h1>
       
        <h1>Details</h1>

        <div>
            <h4>Subscription</h4>
            <hr />
            <dl class="row">
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Price)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Price)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Created)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Created)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.PaymentComplete)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.PaymentComplete)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.SubscriptionType)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.SubscriptionType.Description)
                </dd>
            </dl>
        </div>
    }
    else
    {

        <div><strong><a asp-controller="Subscriptions" asp-action="Create" asp-route-id="@Model.SubscriptionTypeId">Make Payment</a></strong></div>
    }
}





<!-- Set up a container element for the button -->
<div id="paypal-button-container"></div>


<!-- Include the PayPal JavaScript SDK -->
<script src="https://www.paypal.com/sdk/js?client-id=AVSEVXfnaVJTt20STiT0QcUd0pY25kdecvN-wYb_pjQHEwg0pyvvPUL41PWH0A4IyCxflxCRx95F_fzU&currency=USD"></script>



<script>
    // Render the PayPal button into #paypal-button-container
    paypal.Buttons({
        var price = @Model.Price
        // Set up the transaction
        createOrder: function (data, actions) {
            return actions.order.create({
                purchase_units: [{
                    amount: {
                            value: price
                    }
                }]
            });
        },

        // Finalize the transaction
        onApprove: function (data, actions) {
            return actions.order.capture().then(function (orderData) {
                // Successful capture! For demo purposes:
                console.log('Capture result', orderData, JSON.stringify(orderData, null, 2));
                var transaction = orderData.purchase_units[0].payments.captures[0];
                alert('Transaction ' + transaction.status + ': ' + transaction.id + '\n\nSee console for all available details');

                // Replace the above to show a success message within this page, e.g.
                // const element = document.getElementById('paypal-button-container');
                // element.innerHTML = '';
                // element.innerHTML = '<h3>Thank you for your payment!</h3>';
                // Or go to another URL:  actions.redirect('thank_you.html');
            });
        }


    }).render('#paypal-button-container');
</script>