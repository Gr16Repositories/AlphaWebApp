@model IEnumerable<AlphaWebApp.Models.Article>
@using Microsoft.AspNetCore.Identity
@using AlphaWebApp.Services
@using Microsoft.Extensions.Primitives
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager
@inject ISubscriptionService subscriptionsService



<div class="container section">
    <div class="row">
        <div id="site-content" class="site-content">
            <div class="row">

                @if (@Model.Any(x => x.CategoryId == 5))
                {
                    <div id="Stock-scroll">
                        <span id="StockHeaderText"><b>Stocks</b><i class="fa fa-angle-double-down"></i></span>
                        @await Component.InvokeAsync("Stock" , new {region = "uk"})
                    </div>
                    <div id="SpotPrice" class="text-lg-center bg-white p-3 mb-3">
                            <span style="background-color:red;color:white;" class="text-lg-center p-3 border border-3 border-danger fs-4"><b class="fw-3 text-lg-center">Electricity Prices</b></span>
                            @await Component.InvokeAsync("SpotPrice")
                     </div>
                }

                @if (@Model.Any(x => x.CategoryId == 16))
                {
                    
                    <div class="col-8" style="justify-content:left;">
                        <h1>Weather Forecast</h1>

                        <form>
                            Enter the city name <input name="city" id="city" placeholder="City" type="search"  aria-label="Search" />
                            <button style="background-color:red;color:whitesmoke" value="Get Forecast" id="submit">Submit</button>
                            
                        </form>
                        <br/>
                        
                        @{
                            StringValues city;

                            Context.Request.Query.TryGetValue("city", out city);
                        }
                                         
                        @await Component.InvokeAsync("WeatherForeCast" ,
                            new 
                            {
                                City = city.ToString(),
                                Lang = "en"
                            }
                        )
                        
                    </div>
                    <br />
                    <br />
                    <h1>Wether News</h1>
                }
                @foreach (var item in Model)
                {
                    <div class="col-sm-12">
                        <div class="left-content">
                            <div class="details-news">
                                <div class="post">
                                    <div class="entry-header">
                                        <div class="entry-thumbnail">
                                            <img class="card-img-top" src="@item.ImageLink" alt="Card image cap">
                                            <span class="card-category-badge">@item.Category.name</span>
                                        </div>
                                    </div>
                                    <div class="post-content">
                                        <div class="entry-meta">
                                            <ul class="list-inline">
                                                &nbsp;
                                                <li class="publish-date"><a href="#"><i class="fa-sharp fa-solid fa-clock"></i>Date: @item.DateStamp.ToString("yyyy/MM/dd hh:mm tt") </a></li>&nbsp; &nbsp;
                                                |&nbsp;
                                                <li class="views"><a href="#"><i class="fa fa-eye"></i>Views:@item.Views </a></li>&nbsp;&nbsp;&nbsp;
                                                |&nbsp;
                                                <li class="loves">
                                                    @if (!User.Identity.IsAuthenticated)
                                                    {
                                                        <b class="text-end"><i class="bi bi-heart bi-lg"></i>&nbsp;<span>Likes:@item.Like.Count</span></b>
                                                    }
                                                    else if (@item.Like.Any(x => x.UserId == UserManager.GetUserId(User) && x.ArticleId == item.Id))
                                                    {
                                                        <a href="javascript:void(0)" class="unlike" data-id="@item.Id"><i class="bi bi-heart-fill bi-lg text-danger"></i><span>Likes:@item.Like.Count</span></a>
                                                    }
                                                    else
                                                    {
                                                        <a href="javascript:void(0)" class="like" data-id="@item.Id"><i class="bi bi-heart bi-lg"></i>&nbsp;<span>Likes:@item.Like.Count</span></a>
                                                    }
                                                </li>
                                            </ul>
                                        </div>
                                        <h2 class="entry-title">
                                            @item.HeadLine
                                        </h2>
                                        <div class="entry-content">
                                            @item.ContentSummary
                                            @if (subscriptionsService.HasSubscription(User))
                                            {
                                                <a asp-controller="Articles" asp-action="ContinueReading" asp-route-id="@item.Id"><span style="color:#003366"><b>... Continue Reading</b></span></a>
                                            }
                                            else
                                            {
                                                <a asp-controller="Subscriptions" asp-action="GetSubscriptionTypsList"><span style="color:#003366"><b>... Subscribe In Order To See Entire Article</b></span></a>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }

            </div>
        </div>
    </div>
</div>


@section scripts    {
    <script>
        $(document).ready(function () {
            //LIKE
            $(document).on("click", "a.like", function () {
                var id = $(this).data("id");// gets the article id
                var link = "/Articles/LikeThis/"; ///Articles/LikeThis/
                var a = $(this);
                $.ajax({
                    type: "GET",
                    url: link,
                    data: { 'articleid': id },
                    success: function (result) {
                        a.html('<i class="bi bi-heart-fill bi-lg text-danger"></i><span>Likes: ' + result + '</span>').removeClass("like").addClass("unlike");
                    }
                });
            });
            //UNLIKE
            $(document).on("click", "a.unlike", function () {
                var id = $(this).data("id");
                var link = "/Articles/UnlikeThis/";
                var a = $(this);
                $.ajax({
                    type: "GET",
                    url: link,
                    data: { 'articleid': id },
                    success: function (result) {
                        a.html('<i class="bi bi-heart bi-lg text-danger"></i><span>Likes:' + result + '</span>').removeClass("unlike").addClass("like");
                    }
                });
            });

            $(document).load(function(){
                $('#city').val("Linkoping");
                document.getElementById("submit").click();

            });
        });
    </script>
}