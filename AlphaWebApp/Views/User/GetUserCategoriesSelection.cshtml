@model AlphaWebApp.Models.ViewModels.UserCategoriesSelectionVM

@*<style>
    #error {
        border: 2px solid black;
    }
</style>*@

<h1>Personalized Newsletter</h1>


<form method="post" id="newsletterForm" asp-action="GetUserCategoriesSelection">

    @for (int i = 0; i < Model.Categories.Count; i++)
    {
        <input type="hidden" asp-for="@Model.Categories[i].Value" required/>
        <input asp-for=Categories[i].Selected id="checkbox_@i"/> @*@Model.Categories[i].Text*@
        <label for="checkbox_@i">@Model.Categories[i].Text</label>
        <br />
        <br />
    }
    <input type="submit" value="Subscribe" class="btn btn-primary"/>
    <p id="error" style="color:red"></p>
</form>

<br />

@*My try to show form as unchecked but display previously saved newsletter categories*@

@*<h4>Current categories in your weekly newsletter</h4>

@for (int i = 0; i < Model.Categories.Count; i++)
{
    if (Model.Categories[i].Selected == true)
    {
        <p>@Model.Categories[i].Text</p>
    }
}*@

<script>

    // Implement code for restrictions of amount of categories selectable for basic, standard, premium newsletter

    document.getElementById("newsletterForm").addEventListener("submit",
        function (event) {

            var checkboxes = document.querySelectorAll('input[type="checkbox"]');

            var isChecked = false;

            for (var i = 0; i < checkboxes.length; i++) {
                if (checkboxes[i].checked) {
                    isChecked = true;
                    break;
                }
            }

            var errormess = document.getElementById("error");

            if (!isChecked) {
                event.preventDefault();
                errormess.textContent = "You must check at least one alternative.";

                document.getElementById("newsletterForm").addEventListener("change",
                    function (event) {
                        errormess.textContent = "";
                    });
            }
        });

</script>